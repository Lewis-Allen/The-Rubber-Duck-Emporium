@page "/basket"
@inject IBasketService BasketService

@if (CurrentBasket is null)
{
    <p>Loading Basket...</p>
}
else
{
    <button class="btn btn-secondary" @onclick="ClearBasket">Clear Basket</button>
    <ul>
        @foreach (var basketItem in CurrentBasket.BasketItems)
        {
            var item = basketItem;
            <li>@item.Product.Name - @item.Quantity <button class="btn btn-danger" @onclick="() => UpdateItem(item.Product, 0)">Delete</button></li>
        }
    </ul>
}

@code {

    public BasketModel CurrentBasket { get; set; }

    protected async override Task OnInitializedAsync()
    {
        CurrentBasket = await BasketService.GetBasket();
    }

    protected async Task UpdateItem(ProductModel product, int quantity)
    {
        BasketItemModel basketItem = new(product, quantity);
        CurrentBasket = await BasketService.UpdateBasketItem(basketItem);
    }

    protected async Task ClearBasket()
    {
        CurrentBasket = await BasketService.ClearBasket();
    }
} 