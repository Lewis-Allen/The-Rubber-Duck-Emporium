@page "/"
@inject IProductService productService; 
@inject IBasketService basketService; 

<h1>Products</h1>

@if(products == null)
{
    <p>Loading Products...</p>
}
else
{
    <ul>
        @foreach (var product in products)
        {
            ProductModel productLink = product;
            <li><button @onclick="() => AddToBasket(productLink)">@(product.Name + " - " + product.Price)</button></li>
        }
    </ul>
}

<AuthorizeView>
    <Authorized>
        <p>Currently Authorized Roles:</p>
    </Authorized>
    <Authorizing>
        <p>Checking auth status...</p>
    </Authorizing>
    <NotAuthorized>
        <p>You are not currently logged in.</p>
    </NotAuthorized>
</AuthorizeView>
<ul>
    <AuthorizeView Roles="User">
        <li>User</li>
    </AuthorizeView>
    
    <AuthorizeView Roles="Admin">
        <li>Admin</li>
    </AuthorizeView>
</ul>

@code {        

    ProductModel[] products;
    protected async override Task OnInitializedAsync()
    {
        var a = await productService.GetAllProducts();
        products = a;
    }

    void AddToBasket(ProductModel product)
    {
        BasketItemModel basketItem = new(product, 1);
        basketService.AddToBasket(basketItem);
        StateHasChanged();
    }
}